{"version":3,"sources":["utils/api.js","styling/styled-components.js","components/HeaderBar.jsx","components/ArticleCard.jsx","components/ArticleList.jsx","components/Voter.jsx","components/CommentCard.jsx","components/CommentPoster.jsx","components/SingleArticle.jsx","components/UsersList.jsx","App.js","serviceWorker.js","index.js"],"names":["axios","require","exports","getAllArticles","params","get","then","data","articles","getAllTopics","topics","getAllUsers","response","console","log","getArticleById","article_id","article","getCommentsByArticleId","comments","postCommentByArticleId","username","body","post","comment","deleteCommentById","comment_id","delete","getUserByUsername","patchById","type","vote","patch","inc_votes","Background","styled","section","StyledLink","Link","Card","Info","Circles","Circle","div","HeaderBar","state","isClicked","slug","undefined","componentDidMount","api","setState","handleClick","currentState","TopBar","onClick","this","Menu","to","TopicsMenu","map","topic","key","Component","p","ArticleCard","props","title","author","votes","comment_count","ArticleList","sort_by","topic_slug","componentDidUpdate","prevProps","prevState","handleChange","event","target","value","onChange","id","name","form","Voter","optimisticVotes","disabled","FormatP","CommentCard","user","isDeleted","CommentPoster","handleSubmit","preventDefault","addComment","newState","onSubmit","SingleArticle","promises","Promise","all","dataArray","UsersList","App","className","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c2fb0fbd.chunk.js","sourcesContent":["const axios = require(\"axios\");\n\nexports.getAllArticles = params => {\n  return axios\n    .get(\"https://alex-be-nc-news.herokuapp.com/api/articles\", {\n      params\n    })\n    .then(({ data: { articles } }) => {\n      return articles;\n    });\n};\n\nexports.getAllTopics = () => {\n  return axios\n    .get(`https://alex-be-nc-news.herokuapp.com/api/topics`)\n    .then(({ data: { topics } }) => {\n      return topics;\n    });\n};\n\nexports.getAllUsers = () => {\n  return axios\n    .get(`https://alex-be-nc-news.herokuapp.com/api/users`)\n    .then(response => {\n      console.log(response);\n    });\n  // .catch(error => {\n  //   console.log(error);\n  // });\n};\n\nexports.getArticleById = article_id => {\n  return axios\n    .get(`https://alex-be-nc-news.herokuapp.com/api/articles/${article_id}`)\n    .then(({ data: { article } }) => {\n      return article;\n    });\n  // .catch(error => {\n  //   console.log(error);\n  // });\n};\n\nexports.getCommentsByArticleId = article_id => {\n  return axios\n    .get(\n      `https://alex-be-nc-news.herokuapp.com/api/articles/${article_id}/comments`\n    )\n    .then(({ data: { comments } }) => {\n      return comments;\n    });\n  // .catch(error => {\n  //   console.log(error);\n  // });\n};\n\nexports.postCommentByArticleId = (article_id, username, body) => {\n  return axios\n    .post(\n      `https://alex-be-nc-news.herokuapp.com/api/articles/${article_id}/comments`,\n      { username, body }\n    )\n    .then(({ data: { comment } }) => {\n      return comment;\n    });\n};\n\nexports.deleteCommentById = comment_id => {\n  return axios.delete(\n    `https://alex-be-nc-news.herokuapp.com/api/comments/${comment_id}`\n  );\n};\n\nexports.getUserByUsername = username => {\n  return axios\n    .get(`https://alex-be-nc-news.herokuapp.com/api/users/${username}`)\n    .then(response => {\n      console.log(response);\n    });\n  // .catch(error => {\n  //   console.log(error);\n  // });\n};\n\nexports.patchById = (type, comment_id, vote) => {\n  return axios\n    .patch(`https://alex-be-nc-news.herokuapp.com/api/${type}/${comment_id}`, {\n      inc_votes: vote\n    })\n    .then(response => {\n      console.log(response);\n    });\n};\n","import styled from \"styled-components\";\nimport { Link } from \"@reach/router\";\n\nexport const Background = styled.section`\n  margin: 1vh 0vw;\n  min-height: 150vh;\n  overflow: auto;\n  background-color: orange;\n  color: black;\n  text-decoration: none;\n  border-radius: 10px;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: whitesmoke;\n`;\n\nexport const Card = styled.section`\n  padding: 2vw;\n  min-height: 20vh;\n  overflow: auto;\n  background-color: whitesmoke;\n  color: black;\n  text-decoration: none;\n  display: flex;\n  flex-direction: column;\n  align-items: left;\n  text-align: left;\n`;\n\nexport const Info = styled.section`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Circles = styled.section`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr;\n`;\n\nexport const Circle = styled.div`\n  margin: 1vh 3vw;\n  height: 8vh;\n  width: 8vh;\n  background-color: black;\n  color: white;\n  text-decoration: none;\n  border-radius: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import React, { Component } from \"react\";\nimport { Link } from \"@reach/router\";\nimport styled from \"styled-components\";\nimport { StyledLink } from \"../styling/styled-components\";\nimport * as api from \"../utils/api\";\n\nclass HeaderBar extends Component {\n  state = {\n    isClicked: false,\n    topics: [{ slug: undefined }]\n  };\n\n  componentDidMount = () => {\n    api.getAllTopics().then(topics => {\n      this.setState({ topics });\n    });\n  };\n\n  handleClick = () => {\n    this.setState(currentState => {\n      return { isClicked: !currentState.isClicked };\n    });\n  };\n\n  render() {\n    // console.log(this.state);\n    return (\n      <TopBar>\n        HEADER BAR\n        <div onClick={this.handleClick}>Menu</div>\n        {this.state.isClicked && (\n          <Menu>\n            <StyledLink to=\"/\">HOME</StyledLink>\n            <p>TOPICS</p>\n\n            <TopicsMenu>\n              {this.state.topics.map(topic => {\n                return (\n                  <StyledLink key={topic.slug} to={`/articles/${topic.slug}`}>\n                    {topic.slug}\n                  </StyledLink>\n                );\n              })}\n            </TopicsMenu>\n            <StyledLink to=\"/\">USERS</StyledLink>\n          </Menu>\n        )}\n      </TopBar>\n    );\n  }\n}\n\n//Need a media query in here for all sizing, colours etc. can be styled all together.\nconst TopicsMenu = styled.p`\n  text-decoration: none;\n  color: whitesmoke;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n\nconst TopBar = styled.section`\n  background-color: black;\n  color: white;\n  text-decoration: none;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  border-radius: 10px;\n`;\n\nconst Menu = styled.div`\n  background-color: grey;\n  color: white;\n  text-decoration: none;\n  display: grid;\n  /* display: flex;\n  justify-content: space-around; */\n  border-bottom-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n`;\n\nexport default HeaderBar;\n","import React, { Component } from \"react\";\n// import styled from \"styled-components\";\nimport { Card, Info, Circles, Circle } from \"../styling/styled-components\";\n\nclass ArticleCard extends Component {\n  state = {\n    article: {}\n  };\n\n  componentDidMount = () => {};\n\n  render() {\n    // let textPreview = `${this.props.article.body}`;\n    // let shortText = textPreview.substring(0, 80);\n    // console.log(shortText);\n\n    return (\n      <Card>\n        <h2> {this.props.article.title}</h2>\n        <Info>\n          <p>\n            Topic: {this.props.article.topic} <br />\n            Author: {this.props.article.author} <br />\n            Votes: {this.props.article.votes}\n          </p>\n          <Circles>\n            <Circle>{this.props.article.votes}</Circle>\n            <Circle>{this.props.article.comment_count}</Circle>\n          </Circles>\n        </Info>\n      </Card>\n    );\n  }\n}\n\nexport default ArticleCard;\n","import React, { Component } from \"react\";\n// import { Router, Link } from \"@reach/router\";\nimport ArticleCard from \"./ArticleCard\";\nimport * as api from \"../utils/api\";\n// import styled from \"styled-components\";\nimport { Background, StyledLink } from \"../styling/styled-components\";\n\nclass ArticleList extends Component {\n  state = {\n    articles: [],\n    sort_by: \"created_at\"\n  };\n  componentDidMount = () => {\n    const params = {\n      topic: this.props.topic_slug,\n      sort_by: this.state.sort_by\n    };\n    api.getAllArticles(params).then(articles => {\n      this.setState({ articles });\n    });\n  };\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if (\n      prevState.sort_by !== this.state.sort_by ||\n      prevProps.topic_slug !== this.props.topic_slug\n    ) {\n      const params = {\n        topic: this.props.topic_slug,\n        sort_by: this.state.sort_by\n      };\n      api.getAllArticles(params).then(articles => {\n        this.setState({ articles });\n      });\n    }\n  };\n\n  handleChange = event => {\n    let sort_by = event.target.value;\n    this.setState({ sort_by });\n  };\n\n  render() {\n    // console.log(this.state, this.props);\n    return (\n      <Background>\n        <form onChange={this.handleChange}>\n          <label>\n            Order By:\n            <select id=\"\" name=\"\" form=\"\">\n              <option value=\"created_at\">Date Created</option>\n              <option value=\"comment_count\">Comment Count</option>\n              <option value=\"votes\">Votes</option>\n            </select>\n          </label>\n        </form>\n        {this.state.articles.map(article => {\n          return (\n            <StyledLink\n              key={article.article_id}\n              to={`/article/${article.article_id}/`}\n            >\n              <ArticleCard key={article.article_id} article={article} />\n            </StyledLink>\n          );\n        })}\n      </Background>\n    );\n  }\n}\n\nexport default ArticleList;\n","import React, { Component } from \"react\";\nimport * as api from \"../utils/api\";\n\nclass Voter extends Component {\n  state = {\n    optimisticVotes: 0\n  };\n\n  handleClick = vote => {\n    api.patchById(this.props.type, this.props.id, vote);\n    this.setState(currentState => {\n      return { optimisticVotes: currentState.optimisticVotes + vote };\n    });\n  };\n\n  render() {\n    return (\n      <section>\n        <button\n          disabled={this.state.optimisticVotes > 0}\n          onClick={() => {\n            this.handleClick(1);\n          }}\n        >\n          UPVOTE\n        </button>\n        <p>{this.props.votes + this.state.optimisticVotes}</p>\n        <button\n          disabled={this.state.optimisticVotes < 0}\n          onClick={() => {\n            this.handleClick(-1);\n          }}\n        >\n          DOWNVOTE\n        </button>\n      </section>\n    );\n  }\n}\n\nexport default Voter;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Card, Info } from \"../styling/styled-components\";\nimport Voter from \"./Voter\";\nimport * as api from \"../utils/api\";\n\nconst FormatP = styled.p`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n`;\n\nclass CommentCard extends Component {\n  state = {\n    article: {},\n    // HARDCODED USER FOR NOW\n    user: \"tickle122\",\n    isDeleted: false\n  };\n\n  componentDidMount = () => {};\n\n  handleClick = () => {\n    if (this.props.comment.author === this.state.user) {\n      api.deleteCommentById(this.props.comment.comment_id);\n      this.setState({ isDeleted: true });\n    } else {\n      console.log(\"WRONG USER\");\n    }\n  };\n\n  render() {\n    if (this.state.isDeleted === true) return <Card> Comment Deleted </Card>;\n    return (\n      <Card>\n        <h3>{this.props.comment.author}</h3>\n        <Info>\n          <p>{this.props.comment.body}</p>\n          <FormatP>\n            <Voter\n              type={\"comments\"}\n              votes={this.props.comment.votes}\n              id={this.props.comment.comment_id}\n            />\n          </FormatP>\n        </Info>\n        <button onClick={this.handleClick}>DELETE</button>\n      </Card>\n    );\n  }\n}\n\nexport default CommentCard;\n","import React, { Component } from \"react\";\nimport * as api from \"../utils/api\";\n\nclass CommentPoster extends Component {\n  state = {\n    comment: {\n      // HARDCODED USER FOR NOW (author)\n      author: \"tickle122\",\n      article_id: this.props.article_id,\n      body: \"\"\n    }\n  };\n\n  handleChange = event => {\n    const body = event.target.value;\n    this.setState(currentState => {\n      currentState.comment.body = body;\n      return { currentState };\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    api\n      .postCommentByArticleId(\n        this.props.article_id,\n        this.state.comment.author,\n        this.state.comment.body\n      )\n      .then(comment => {\n        this.props.addComment(comment);\n      });\n    this.setState(currentState => {\n      let newState = { ...currentState.comment };\n      newState.body = \"\";\n      return { comment: newState };\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onChange={this.handleChange} onSubmit={this.handleSubmit}>\n          <label>\n            POST A COMMENT:\n            <input type=\"text\" value={this.state.comment.body} />\n            <button>Post</button>\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default CommentPoster;\n","import React, { Component } from \"react\";\nimport * as api from \"../utils/api\";\nimport { Background, Card } from \"../styling/styled-components\";\nimport CommentCard from \"./CommentCard\";\nimport Voter from \"./Voter\";\nimport CommentPoster from \"./CommentPoster\";\n\nclass SingleArticle extends Component {\n  state = {\n    article: {},\n    comments: [{}]\n  };\n  componentDidMount = () => {\n    const promises = [\n      api.getArticleById(this.props.article_id),\n      api.getCommentsByArticleId(this.props.article_id)\n    ];\n    Promise.all(promises).then(dataArray => {\n      this.setState({ article: dataArray[0], comments: dataArray[1] });\n    });\n  };\n  componentDidUpdate = prevProps => {\n    if (prevProps.article_id !== this.props.article_id) {\n      const promises = [\n        api.getArticleById(this.props.article_id),\n        api.getCommentsByArticleId(this.props.article_id)\n      ];\n      Promise.all(promises).then(dataArray => {\n        this.setState({ article: dataArray[0], comments: dataArray[1] });\n      });\n    }\n  };\n  addComment = comment => {\n    this.setState(currentState => {\n      return { comments: [comment, ...currentState.comments] };\n    });\n  };\n\n  render() {\n    return (\n      <Background>\n        SINGLE ARTICLE CARD\n        <Card>\n          <h2>{this.state.article.title}</h2>\n          <p>{this.state.article.body}</p>\n          <Voter\n            type={\"articles\"}\n            votes={this.state.article.votes}\n            id={this.state.article.article_id}\n          />\n        </Card>\n        COMMENTS\n        <CommentPoster\n          article_id={this.state.article.article_id}\n          addComment={this.addComment}\n        />\n        {this.state.comments.map(comment => {\n          return <CommentCard key={comment.comment_id} comment={comment} />;\n        })}\n      </Background>\n    );\n  }\n}\n\nexport default SingleArticle;\n","import React from \"react\";\n\nconst UsersList = () => {\n  return <div></div>;\n};\n\nexport default UsersList;\n","import React, { Component } from \"react\";\nimport { Router } from \"@reach/router\";\nimport HeaderBar from \"./components/HeaderBar\";\nimport ArticleList from \"./components/ArticleList\";\nimport SingleArticle from \"./components/SingleArticle\";\nimport UsersList from \"./components/UsersList\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"outer-container\">\n        {/*always there at the top of every page,*/}\n        <HeaderBar />\n        {/*only one of the following will show, filling the rest of the screen */}\n        <section className=\"Main-area\">\n          <Router>\n            <ArticleList path=\"/\" />\n            <ArticleList path=\"/articles/:topic_slug\" />\n            <SingleArticle path=\"/article/:article_id/*\" />\n            <UsersList path=\"/users/*\" />\n            {/* <TopicsList path=\"/topics/:topic_slug\" /> */}\n          </Router>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}